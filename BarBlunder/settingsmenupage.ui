<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>SettingsMenu</class>
 <widget class="QWidget" name="SettingsMenu">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>768</width>
    <height>720</height>
   </rect>
  </property>
  <property name="font">
   <font>
    <pointsize>8</pointsize>
   </font>
  </property>
  <property name="windowTitle">
   <string>Form</string>
  </property>
  <property name="styleSheet">
   <string notr="true">QComboBox {
background-color: red;
}

QLabel {
background-color: transparent;
border: none;
color: #e5e5e5;
text-align:left;
font: bold &quot;Ebrima&quot;;
font-size: 22px;
}

QLabel::disabled {
color: #5e5e5e;
}

QPushButton {
background-color: transparent;
border: none;
color: #e5e5e5;
text-align:left;
font: bold &quot;Ebrima&quot;;
font-size: 22px;

height: 40px;
min-height: 40px;
max-height: 40px;


width: 236px;
min-width: 236px;
max-width: 236px;
}

QPushButton::hover {
color: #FFE770;
font-size: 23px;
}

QPushButton::disabled {
color: #5e5e5e;
}</string>
  </property>
  <widget class="QLabel" name="Title">
   <property name="geometry">
    <rect>
     <x>50</x>
     <y>80</y>
     <width>611</width>
     <height>302</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true"/>
   </property>
   <property name="text">
    <string/>
   </property>
   <property name="pixmap">
    <pixmap>:/images/menu/title</pixmap>
   </property>
   <property name="scaledContents">
    <bool>true</bool>
   </property>
  </widget>
  <widget class="QPushButton" name="BackButton">
   <property name="geometry">
    <rect>
     <x>136</x>
     <y>556</y>
     <width>236</width>
     <height>40</height>
    </rect>
   </property>
   <property name="font">
    <font>
     <family>Ebrima</family>
     <pointsize>-1</pointsize>
     <italic>false</italic>
     <bold>true</bold>
    </font>
   </property>
   <property name="text">
    <string>BACK</string>
   </property>
  </widget>
  <widget class="QComboBox" name="WindowSizeComboBox">
   <property name="geometry">
    <rect>
     <x>330</x>
     <y>480</y>
     <width>141</width>
     <height>36</height>
    </rect>
   </property>
   <property name="font">
    <font>
     <family>Ebrima</family>
     <pointsize>-1</pointsize>
     <italic>false</italic>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QComboBox {
background-color: transparent;
color: #e5e5e5;
border: none;
font: bold &quot;Ebrima&quot;;
font-size: 22px;
padding: 1px 18px 1px 3px;
}

QComboBox:editable {
background: #e5e5e5;
}

QComboBox:!editable, QComboBox::drop-down:editable {
background: transparent;
color: #e5e5e5;
}

/* QComboBox gets the &quot;on&quot; state when the popup is open */
QComboBox:!editable:on, QComboBox::drop-down:editable:on {
background: transparent;
color: #e5e5e5;
}

QComboBox:on { /* shift the text when the popup opens */
padding-top: 3px;
padding-left: 4px;
}

QComboBox::drop-down {
background-color: transparent;
subcontrol-origin: padding;
subcontrol-position: top right;
width: 15px;

border: none;
}

QComboBox::down-arrow {
image: url(:/images/menu/combobox_arrow);
}

QComboBox::down-arrow:on { /* shift the arrow when popup is open */
top: 1px;
left: 1px;
}</string>
   </property>
   <property name="currentText">
    <string/>
   </property>
   <property name="currentIndex">
    <number>-1</number>
   </property>
   <property name="maxVisibleItems">
    <number>2</number>
   </property>
  </widget>
  <widget class="QSpinBox" name="VolumeSpinBox">
   <property name="geometry">
    <rect>
     <x>320</x>
     <y>382</y>
     <width>171</width>
     <height>40</height>
    </rect>
   </property>
   <property name="font">
    <font>
     <family>Ebrima</family>
     <pointsize>-1</pointsize>
     <italic>false</italic>
     <bold>true</bold>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">QSpinBox {
background-color: transparent;
color: #e5e5e5;
border: none;
font: bold &quot;Ebrima&quot;;
font-size: 22px;
selection-background-color: transparent;
selection-color: #FFE770;
}

QSpinBox::up-button  {
subcontrol-origin: margin;
subcontrol-position: center right;
image: url(:/images/menu/spinbox_arrow_right);
background-color: transparent;
right: 1px;
height: 40px;
width: 40px;
}

QSpinBox::up-button:hover {
image: url(:/images/menu/spinbox_arrow_right_hover);
border-image: url(:/images/menu/spinbox_arrow_right_hover) 1;
}

QSpinBox::up-button:pressed {
/*border-image: url(:/images/spinup_pressed.png) 1;*/
}

QSpinBox::down-button  {
subcontrol-origin: margin;
subcontrol-position: center left;
image: url(:/images/menu/spinbox_arrow_left);
background-color: transparent;
left: 1px;
height: 40px;
width: 40px;
}

QSpinBox::down-button:hover {
image: url(:/images/menu/spinbox_arrow_left_hover);
border-image: url(:/images/menu/spinbox_arrow_left_hover) 1;
}

QSpinBox::down-button:pressed {
/*border-image: url(:/images/spinup_pressed.png) 1;*/
}</string>
   </property>
   <property name="frame">
    <bool>false</bool>
   </property>
   <property name="alignment">
    <set>Qt::AlignCenter</set>
   </property>
   <property name="readOnly">
    <bool>false</bool>
   </property>
   <property name="buttonSymbols">
    <enum>QAbstractSpinBox::UpDownArrows</enum>
   </property>
   <property name="maximum">
    <number>10</number>
   </property>
  </widget>
  <widget class="QLabel" name="VolumeLabel">
   <property name="geometry">
    <rect>
     <x>136</x>
     <y>382</y>
     <width>161</width>
     <height>40</height>
    </rect>
   </property>
   <property name="font">
    <font>
     <family>Ebrima</family>
     <pointsize>-1</pointsize>
     <italic>false</italic>
     <bold>true</bold>
    </font>
   </property>
   <property name="focusPolicy">
    <enum>Qt::StrongFocus</enum>
   </property>
   <property name="text">
    <string>VOLUME</string>
   </property>
  </widget>
  <widget class="QLabel" name="WindowSizeLabel">
   <property name="geometry">
    <rect>
     <x>136</x>
     <y>478</y>
     <width>161</width>
     <height>40</height>
    </rect>
   </property>
   <property name="font">
    <font>
     <family>Ebrima</family>
     <pointsize>-1</pointsize>
     <italic>false</italic>
     <bold>true</bold>
    </font>
   </property>
   <property name="focusPolicy">
    <enum>Qt::StrongFocus</enum>
   </property>
   <property name="text">
    <string>WINDOW SIZE</string>
   </property>
  </widget>
  <widget class="QLabel" name="FullscreenLabel">
   <property name="geometry">
    <rect>
     <x>136</x>
     <y>430</y>
     <width>161</width>
     <height>40</height>
    </rect>
   </property>
   <property name="font">
    <font>
     <family>Ebrima</family>
     <pointsize>-1</pointsize>
     <italic>false</italic>
     <bold>true</bold>
    </font>
   </property>
   <property name="focusPolicy">
    <enum>Qt::StrongFocus</enum>
   </property>
   <property name="text">
    <string>FULLSCREEN</string>
   </property>
  </widget>
  <widget class="QCheckBox" name="FullscreenCheckBox">
   <property name="geometry">
    <rect>
     <x>386</x>
     <y>432</y>
     <width>38</width>
     <height>38</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QCheckBox {
spacing: 0px;
}

QCheckBox::indicator {
width: 38px;
height: 38px;
}

QCheckBox::indicator:unchecked {
image: url(:/images/menu/checkbox_unchecked);
}

QCheckBox::indicator:unchecked:hover {
image: url(:/images/menu/checkbox_unchecked_hover);
border-image: url(:/images/menu/checkbox_unchecked_hover) 1;
}

QCheckBox::indicator:unchecked:pressed {
   /* image: url(:/images/checkbox_unchecked_pressed.png);*/
}

QCheckBox::indicator:checked {
image: url(:/images/menu/checkbox_checked);
}

QCheckBox::indicator:checked:hover {
image: url(:/images/menu/checkbox_checked_hover);
border-image: url(:/images/menu/checkbox_checked_hover) 1;
}

QCheckBox::indicator:checked:pressed {
    /*image: url(:/images/checkbox_checked_pressed.png);*/
}

/*QCheckBox::indicator:indeterminate:hover {
    image: url(:/images/checkbox_indeterminate_hover.png);
}

QCheckBox::indicator:indeterminate:pressed {
    image: url(:/images/checkbox_indeterminate_pressed.png);
}*/</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
 </widget>
 <tabstops>
  <tabstop>VolumeSpinBox</tabstop>
  <tabstop>FullscreenCheckBox</tabstop>
  <tabstop>WindowSizeComboBox</tabstop>
  <tabstop>BackButton</tabstop>
 </tabstops>
 <resources/>
 <connections/>
</ui>
